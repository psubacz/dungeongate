// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: api/proto/games/game_service_v1.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// GameSessionStatus represents the status of a game session
type GameSessionStatus int32

const (
	GameSessionStatus_UNKNOWN  GameSessionStatus = 0
	GameSessionStatus_STARTING GameSessionStatus = 1
	GameSessionStatus_RUNNING  GameSessionStatus = 2
	GameSessionStatus_PAUSED   GameSessionStatus = 3
	GameSessionStatus_STOPPING GameSessionStatus = 4
	GameSessionStatus_STOPPED  GameSessionStatus = 5
	GameSessionStatus_ERROR    GameSessionStatus = 6
)

// Enum value maps for GameSessionStatus.
var (
	GameSessionStatus_name = map[int32]string{
		0: "UNKNOWN",
		1: "STARTING",
		2: "RUNNING",
		3: "PAUSED",
		4: "STOPPING",
		5: "STOPPED",
		6: "ERROR",
	}
	GameSessionStatus_value = map[string]int32{
		"UNKNOWN":  0,
		"STARTING": 1,
		"RUNNING":  2,
		"PAUSED":   3,
		"STOPPING": 4,
		"STOPPED":  5,
		"ERROR":    6,
	}
)

func (x GameSessionStatus) Enum() *GameSessionStatus {
	p := new(GameSessionStatus)
	*p = x
	return p
}

func (x GameSessionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GameSessionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_games_game_service_v1_proto_enumTypes[0].Descriptor()
}

func (GameSessionStatus) Type() protoreflect.EnumType {
	return &file_api_proto_games_game_service_v1_proto_enumTypes[0]
}

func (x GameSessionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GameSessionStatus.Descriptor instead.
func (GameSessionStatus) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_games_game_service_v1_proto_rawDescGZIP(), []int{0}
}

// StartGameRequest represents a request to start a game
type StartGameRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	UserId          string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Username        string                 `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	GameId          string                 `protobuf:"bytes,3,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	SessionId       string                 `protobuf:"bytes,4,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Environment     map[string]string      `protobuf:"bytes,5,rep,name=environment,proto3" json:"environment,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	ResourceLimits  *GameResourceLimits    `protobuf:"bytes,6,opt,name=resource_limits,json=resourceLimits,proto3" json:"resource_limits,omitempty"`
	SpectatorIds    []string               `protobuf:"bytes,7,rep,name=spectator_ids,json=spectatorIds,proto3" json:"spectator_ids,omitempty"`
	EnableRecording bool                   `protobuf:"varint,8,opt,name=enable_recording,json=enableRecording,proto3" json:"enable_recording,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *StartGameRequest) Reset() {
	*x = StartGameRequest{}
	mi := &file_api_proto_games_game_service_v1_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartGameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartGameRequest) ProtoMessage() {}

func (x *StartGameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_games_game_service_v1_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartGameRequest.ProtoReflect.Descriptor instead.
func (*StartGameRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_games_game_service_v1_proto_rawDescGZIP(), []int{0}
}

func (x *StartGameRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *StartGameRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *StartGameRequest) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (x *StartGameRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *StartGameRequest) GetEnvironment() map[string]string {
	if x != nil {
		return x.Environment
	}
	return nil
}

func (x *StartGameRequest) GetResourceLimits() *GameResourceLimits {
	if x != nil {
		return x.ResourceLimits
	}
	return nil
}

func (x *StartGameRequest) GetSpectatorIds() []string {
	if x != nil {
		return x.SpectatorIds
	}
	return nil
}

func (x *StartGameRequest) GetEnableRecording() bool {
	if x != nil {
		return x.EnableRecording
	}
	return false
}

// StartGameResponse represents the response to starting a game
type StartGameResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Session       *GameSession           `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartGameResponse) Reset() {
	*x = StartGameResponse{}
	mi := &file_api_proto_games_game_service_v1_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartGameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartGameResponse) ProtoMessage() {}

func (x *StartGameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_games_game_service_v1_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartGameResponse.ProtoReflect.Descriptor instead.
func (*StartGameResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_games_game_service_v1_proto_rawDescGZIP(), []int{1}
}

func (x *StartGameResponse) GetSession() *GameSession {
	if x != nil {
		return x.Session
	}
	return nil
}

func (x *StartGameResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// StopGameRequest represents a request to stop a game
type StopGameRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Force         bool                   `protobuf:"varint,3,opt,name=force,proto3" json:"force,omitempty"`
	Reason        string                 `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopGameRequest) Reset() {
	*x = StopGameRequest{}
	mi := &file_api_proto_games_game_service_v1_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopGameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopGameRequest) ProtoMessage() {}

func (x *StopGameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_games_game_service_v1_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopGameRequest.ProtoReflect.Descriptor instead.
func (*StopGameRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_games_game_service_v1_proto_rawDescGZIP(), []int{2}
}

func (x *StopGameRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *StopGameRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *StopGameRequest) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

func (x *StopGameRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// StopGameResponse represents the response to stopping a game
type StopGameResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	FinalStats    *GameSessionStats      `protobuf:"bytes,3,opt,name=final_stats,json=finalStats,proto3" json:"final_stats,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopGameResponse) Reset() {
	*x = StopGameResponse{}
	mi := &file_api_proto_games_game_service_v1_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopGameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopGameResponse) ProtoMessage() {}

func (x *StopGameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_games_game_service_v1_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopGameResponse.ProtoReflect.Descriptor instead.
func (*StopGameResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_games_game_service_v1_proto_rawDescGZIP(), []int{3}
}

func (x *StopGameResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *StopGameResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *StopGameResponse) GetFinalStats() *GameSessionStats {
	if x != nil {
		return x.FinalStats
	}
	return nil
}

// GetGameSessionRequest represents a request to get game session info
type GetGameSessionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetGameSessionRequest) Reset() {
	*x = GetGameSessionRequest{}
	mi := &file_api_proto_games_game_service_v1_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGameSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGameSessionRequest) ProtoMessage() {}

func (x *GetGameSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_games_game_service_v1_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGameSessionRequest.ProtoReflect.Descriptor instead.
func (*GetGameSessionRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_games_game_service_v1_proto_rawDescGZIP(), []int{4}
}

func (x *GetGameSessionRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

// GetGameSessionResponse represents the response with game session info
type GetGameSessionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Session       *GameSession           `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetGameSessionResponse) Reset() {
	*x = GetGameSessionResponse{}
	mi := &file_api_proto_games_game_service_v1_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGameSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGameSessionResponse) ProtoMessage() {}

func (x *GetGameSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_games_game_service_v1_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGameSessionResponse.ProtoReflect.Descriptor instead.
func (*GetGameSessionResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_games_game_service_v1_proto_rawDescGZIP(), []int{5}
}

func (x *GetGameSessionResponse) GetSession() *GameSession {
	if x != nil {
		return x.Session
	}
	return nil
}

func (x *GetGameSessionResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// ListActiveSessionsRequest represents a request to list active sessions
type ListActiveSessionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // Optional: filter by user
	GameId        string                 `protobuf:"bytes,2,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"` // Optional: filter by game
	Limit         int32                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`                // Optional: limit results
	Offset        int32                  `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`              // Optional: offset for pagination
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListActiveSessionsRequest) Reset() {
	*x = ListActiveSessionsRequest{}
	mi := &file_api_proto_games_game_service_v1_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListActiveSessionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListActiveSessionsRequest) ProtoMessage() {}

func (x *ListActiveSessionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_games_game_service_v1_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListActiveSessionsRequest.ProtoReflect.Descriptor instead.
func (*ListActiveSessionsRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_games_game_service_v1_proto_rawDescGZIP(), []int{6}
}

func (x *ListActiveSessionsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ListActiveSessionsRequest) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (x *ListActiveSessionsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListActiveSessionsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

// ListActiveSessionsResponse represents the response with active sessions
type ListActiveSessionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sessions      []*GameSession         `protobuf:"bytes,1,rep,name=sessions,proto3" json:"sessions,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	Error         string                 `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListActiveSessionsResponse) Reset() {
	*x = ListActiveSessionsResponse{}
	mi := &file_api_proto_games_game_service_v1_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListActiveSessionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListActiveSessionsResponse) ProtoMessage() {}

func (x *ListActiveSessionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_games_game_service_v1_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListActiveSessionsResponse.ProtoReflect.Descriptor instead.
func (*ListActiveSessionsResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_games_game_service_v1_proto_rawDescGZIP(), []int{7}
}

func (x *ListActiveSessionsResponse) GetSessions() []*GameSession {
	if x != nil {
		return x.Sessions
	}
	return nil
}

func (x *ListActiveSessionsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *ListActiveSessionsResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// ListAvailableGamesResponse represents the response with available games
type ListAvailableGamesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Games         []*Game                `protobuf:"bytes,1,rep,name=games,proto3" json:"games,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAvailableGamesResponse) Reset() {
	*x = ListAvailableGamesResponse{}
	mi := &file_api_proto_games_game_service_v1_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAvailableGamesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAvailableGamesResponse) ProtoMessage() {}

func (x *ListAvailableGamesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_games_game_service_v1_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAvailableGamesResponse.ProtoReflect.Descriptor instead.
func (*ListAvailableGamesResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_games_game_service_v1_proto_rawDescGZIP(), []int{8}
}

func (x *ListAvailableGamesResponse) GetGames() []*Game {
	if x != nil {
		return x.Games
	}
	return nil
}

func (x *ListAvailableGamesResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// GetGameInfoRequest represents a request to get game info
type GetGameInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GameId        string                 `protobuf:"bytes,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetGameInfoRequest) Reset() {
	*x = GetGameInfoRequest{}
	mi := &file_api_proto_games_game_service_v1_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGameInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGameInfoRequest) ProtoMessage() {}

func (x *GetGameInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_games_game_service_v1_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGameInfoRequest.ProtoReflect.Descriptor instead.
func (*GetGameInfoRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_games_game_service_v1_proto_rawDescGZIP(), []int{9}
}

func (x *GetGameInfoRequest) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

// GetGameInfoResponse represents the response with game info
type GetGameInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Game          *Game                  `protobuf:"bytes,1,opt,name=game,proto3" json:"game,omitempty"`
	Stats         *GameStats             `protobuf:"bytes,2,opt,name=stats,proto3" json:"stats,omitempty"`
	Error         string                 `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetGameInfoResponse) Reset() {
	*x = GetGameInfoResponse{}
	mi := &file_api_proto_games_game_service_v1_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGameInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGameInfoResponse) ProtoMessage() {}

func (x *GetGameInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_games_game_service_v1_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGameInfoResponse.ProtoReflect.Descriptor instead.
func (*GetGameInfoResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_games_game_service_v1_proto_rawDescGZIP(), []int{10}
}

func (x *GetGameInfoResponse) GetGame() *Game {
	if x != nil {
		return x.Game
	}
	return nil
}

func (x *GetGameInfoResponse) GetStats() *GameStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *GetGameInfoResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// StreamGameEventsRequest represents a request to stream game events
type StreamGameEventsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	EventTypes    []string               `protobuf:"bytes,2,rep,name=event_types,json=eventTypes,proto3" json:"event_types,omitempty"` // Optional: filter by event types
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamGameEventsRequest) Reset() {
	*x = StreamGameEventsRequest{}
	mi := &file_api_proto_games_game_service_v1_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamGameEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamGameEventsRequest) ProtoMessage() {}

func (x *StreamGameEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_games_game_service_v1_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamGameEventsRequest.ProtoReflect.Descriptor instead.
func (*StreamGameEventsRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_games_game_service_v1_proto_rawDescGZIP(), []int{11}
}

func (x *StreamGameEventsRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *StreamGameEventsRequest) GetEventTypes() []string {
	if x != nil {
		return x.EventTypes
	}
	return nil
}

// AttachToGameRequest represents a request to attach to a game for spectating
type AttachToGameRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	SessionId         string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	SpectatorId       string                 `protobuf:"bytes,2,opt,name=spectator_id,json=spectatorId,proto3" json:"spectator_id,omitempty"`
	SpectatorUsername string                 `protobuf:"bytes,3,opt,name=spectator_username,json=spectatorUsername,proto3" json:"spectator_username,omitempty"`
	ReceiveInput      bool                   `protobuf:"varint,4,opt,name=receive_input,json=receiveInput,proto3" json:"receive_input,omitempty"`    // Whether to receive input events
	ReceiveOutput     bool                   `protobuf:"varint,5,opt,name=receive_output,json=receiveOutput,proto3" json:"receive_output,omitempty"` // Whether to receive output events
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *AttachToGameRequest) Reset() {
	*x = AttachToGameRequest{}
	mi := &file_api_proto_games_game_service_v1_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AttachToGameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachToGameRequest) ProtoMessage() {}

func (x *AttachToGameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_games_game_service_v1_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachToGameRequest.ProtoReflect.Descriptor instead.
func (*AttachToGameRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_games_game_service_v1_proto_rawDescGZIP(), []int{12}
}

func (x *AttachToGameRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *AttachToGameRequest) GetSpectatorId() string {
	if x != nil {
		return x.SpectatorId
	}
	return ""
}

func (x *AttachToGameRequest) GetSpectatorUsername() string {
	if x != nil {
		return x.SpectatorUsername
	}
	return ""
}

func (x *AttachToGameRequest) GetReceiveInput() bool {
	if x != nil {
		return x.ReceiveInput
	}
	return false
}

func (x *AttachToGameRequest) GetReceiveOutput() bool {
	if x != nil {
		return x.ReceiveOutput
	}
	return false
}

// SendGameInputRequest represents a request to send input to a game
type SendGameInputRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	InputData     []byte                 `protobuf:"bytes,3,opt,name=input_data,json=inputData,proto3" json:"input_data,omitempty"`
	InputType     string                 `protobuf:"bytes,4,opt,name=input_type,json=inputType,proto3" json:"input_type,omitempty"` // "keyboard", "mouse", "special"
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendGameInputRequest) Reset() {
	*x = SendGameInputRequest{}
	mi := &file_api_proto_games_game_service_v1_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendGameInputRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendGameInputRequest) ProtoMessage() {}

func (x *SendGameInputRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_games_game_service_v1_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendGameInputRequest.ProtoReflect.Descriptor instead.
func (*SendGameInputRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_games_game_service_v1_proto_rawDescGZIP(), []int{13}
}

func (x *SendGameInputRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *SendGameInputRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SendGameInputRequest) GetInputData() []byte {
	if x != nil {
		return x.InputData
	}
	return nil
}

func (x *SendGameInputRequest) GetInputType() string {
	if x != nil {
		return x.InputType
	}
	return ""
}

func (x *SendGameInputRequest) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

// SendGameInputResponse represents the response to sending input
type SendGameInputResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendGameInputResponse) Reset() {
	*x = SendGameInputResponse{}
	mi := &file_api_proto_games_game_service_v1_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendGameInputResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendGameInputResponse) ProtoMessage() {}

func (x *SendGameInputResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_games_game_service_v1_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendGameInputResponse.ProtoReflect.Descriptor instead.
func (*SendGameInputResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_games_game_service_v1_proto_rawDescGZIP(), []int{14}
}

func (x *SendGameInputResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SendGameInputResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// HealthResponse represents the health check response
type HealthResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"` // "healthy", "unhealthy", "degraded"
	Details       map[string]string      `protobuf:"bytes,2,rep,name=details,proto3" json:"details,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthResponse) Reset() {
	*x = HealthResponse{}
	mi := &file_api_proto_games_game_service_v1_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthResponse) ProtoMessage() {}

func (x *HealthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_games_game_service_v1_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthResponse.ProtoReflect.Descriptor instead.
func (*HealthResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_games_game_service_v1_proto_rawDescGZIP(), []int{15}
}

func (x *HealthResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *HealthResponse) GetDetails() map[string]string {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *HealthResponse) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

// GameSession represents an active game session
type GameSession struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Id               string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId           string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Username         string                 `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	GameId           string                 `protobuf:"bytes,4,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	Status           GameSessionStatus      `protobuf:"varint,5,opt,name=status,proto3,enum=dungeongate.games.v1.GameSessionStatus" json:"status,omitempty"`
	StartTime        *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	LastActivity     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=last_activity,json=lastActivity,proto3" json:"last_activity,omitempty"`
	ContainerId      string                 `protobuf:"bytes,8,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	PodName          string                 `protobuf:"bytes,9,opt,name=pod_name,json=podName,proto3" json:"pod_name,omitempty"`
	ResourceUsage    *GameResourceUsage     `protobuf:"bytes,10,opt,name=resource_usage,json=resourceUsage,proto3" json:"resource_usage,omitempty"`
	Spectators       []string               `protobuf:"bytes,11,rep,name=spectators,proto3" json:"spectators,omitempty"`
	RecordingEnabled bool                   `protobuf:"varint,12,opt,name=recording_enabled,json=recordingEnabled,proto3" json:"recording_enabled,omitempty"`
	RecordingPath    string                 `protobuf:"bytes,13,opt,name=recording_path,json=recordingPath,proto3" json:"recording_path,omitempty"`
	Metadata         map[string]string      `protobuf:"bytes,14,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GameSession) Reset() {
	*x = GameSession{}
	mi := &file_api_proto_games_game_service_v1_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameSession) ProtoMessage() {}

func (x *GameSession) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_games_game_service_v1_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameSession.ProtoReflect.Descriptor instead.
func (*GameSession) Descriptor() ([]byte, []int) {
	return file_api_proto_games_game_service_v1_proto_rawDescGZIP(), []int{16}
}

func (x *GameSession) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GameSession) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GameSession) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *GameSession) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (x *GameSession) GetStatus() GameSessionStatus {
	if x != nil {
		return x.Status
	}
	return GameSessionStatus_UNKNOWN
}

func (x *GameSession) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *GameSession) GetLastActivity() *timestamppb.Timestamp {
	if x != nil {
		return x.LastActivity
	}
	return nil
}

func (x *GameSession) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *GameSession) GetPodName() string {
	if x != nil {
		return x.PodName
	}
	return ""
}

func (x *GameSession) GetResourceUsage() *GameResourceUsage {
	if x != nil {
		return x.ResourceUsage
	}
	return nil
}

func (x *GameSession) GetSpectators() []string {
	if x != nil {
		return x.Spectators
	}
	return nil
}

func (x *GameSession) GetRecordingEnabled() bool {
	if x != nil {
		return x.RecordingEnabled
	}
	return false
}

func (x *GameSession) GetRecordingPath() string {
	if x != nil {
		return x.RecordingPath
	}
	return ""
}

func (x *GameSession) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Game represents a game configuration
type Game struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name           string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ShortName      string                 `protobuf:"bytes,3,opt,name=short_name,json=shortName,proto3" json:"short_name,omitempty"`
	Version        string                 `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	Enabled        bool                   `protobuf:"varint,5,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Description    string                 `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	Categories     []string               `protobuf:"bytes,7,rep,name=categories,proto3" json:"categories,omitempty"`
	Binary         *GameBinary            `protobuf:"bytes,8,opt,name=binary,proto3" json:"binary,omitempty"`
	Files          *GameFiles             `protobuf:"bytes,9,opt,name=files,proto3" json:"files,omitempty"`
	Settings       *GameSettings          `protobuf:"bytes,10,opt,name=settings,proto3" json:"settings,omitempty"`
	Environment    map[string]string      `protobuf:"bytes,11,rep,name=environment,proto3" json:"environment,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	ResourceLimits *GameResourceLimits    `protobuf:"bytes,12,opt,name=resource_limits,json=resourceLimits,proto3" json:"resource_limits,omitempty"`
	Container      *GameContainer         `protobuf:"bytes,13,opt,name=container,proto3" json:"container,omitempty"`
	Networking     *GameNetworking        `protobuf:"bytes,14,opt,name=networking,proto3" json:"networking,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Game) Reset() {
	*x = Game{}
	mi := &file_api_proto_games_game_service_v1_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Game) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Game) ProtoMessage() {}

func (x *Game) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_games_game_service_v1_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Game.ProtoReflect.Descriptor instead.
func (*Game) Descriptor() ([]byte, []int) {
	return file_api_proto_games_game_service_v1_proto_rawDescGZIP(), []int{17}
}

func (x *Game) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Game) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Game) GetShortName() string {
	if x != nil {
		return x.ShortName
	}
	return ""
}

func (x *Game) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Game) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *Game) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Game) GetCategories() []string {
	if x != nil {
		return x.Categories
	}
	return nil
}

func (x *Game) GetBinary() *GameBinary {
	if x != nil {
		return x.Binary
	}
	return nil
}

func (x *Game) GetFiles() *GameFiles {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *Game) GetSettings() *GameSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

func (x *Game) GetEnvironment() map[string]string {
	if x != nil {
		return x.Environment
	}
	return nil
}

func (x *Game) GetResourceLimits() *GameResourceLimits {
	if x != nil {
		return x.ResourceLimits
	}
	return nil
}

func (x *Game) GetContainer() *GameContainer {
	if x != nil {
		return x.Container
	}
	return nil
}

func (x *Game) GetNetworking() *GameNetworking {
	if x != nil {
		return x.Networking
	}
	return nil
}

// GameBinary represents binary configuration
type GameBinary struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Path             string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Args             []string               `protobuf:"bytes,2,rep,name=args,proto3" json:"args,omitempty"`
	WorkingDirectory string                 `protobuf:"bytes,3,opt,name=working_directory,json=workingDirectory,proto3" json:"working_directory,omitempty"`
	User             string                 `protobuf:"bytes,4,opt,name=user,proto3" json:"user,omitempty"`
	Group            string                 `protobuf:"bytes,5,opt,name=group,proto3" json:"group,omitempty"`
	Permissions      string                 `protobuf:"bytes,6,opt,name=permissions,proto3" json:"permissions,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GameBinary) Reset() {
	*x = GameBinary{}
	mi := &file_api_proto_games_game_service_v1_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameBinary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameBinary) ProtoMessage() {}

func (x *GameBinary) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_games_game_service_v1_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameBinary.ProtoReflect.Descriptor instead.
func (*GameBinary) Descriptor() ([]byte, []int) {
	return file_api_proto_games_game_service_v1_proto_rawDescGZIP(), []int{18}
}

func (x *GameBinary) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *GameBinary) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *GameBinary) GetWorkingDirectory() string {
	if x != nil {
		return x.WorkingDirectory
	}
	return ""
}

func (x *GameBinary) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *GameBinary) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *GameBinary) GetPermissions() string {
	if x != nil {
		return x.Permissions
	}
	return ""
}

// GameFiles represents file configuration
type GameFiles struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	DataDirectory   string                 `protobuf:"bytes,1,opt,name=data_directory,json=dataDirectory,proto3" json:"data_directory,omitempty"`
	SaveDirectory   string                 `protobuf:"bytes,2,opt,name=save_directory,json=saveDirectory,proto3" json:"save_directory,omitempty"`
	ConfigDirectory string                 `protobuf:"bytes,3,opt,name=config_directory,json=configDirectory,proto3" json:"config_directory,omitempty"`
	LogDirectory    string                 `protobuf:"bytes,4,opt,name=log_directory,json=logDirectory,proto3" json:"log_directory,omitempty"`
	TempDirectory   string                 `protobuf:"bytes,5,opt,name=temp_directory,json=tempDirectory,proto3" json:"temp_directory,omitempty"`
	SharedFiles     []string               `protobuf:"bytes,6,rep,name=shared_files,json=sharedFiles,proto3" json:"shared_files,omitempty"`
	UserFiles       []string               `protobuf:"bytes,7,rep,name=user_files,json=userFiles,proto3" json:"user_files,omitempty"`
	Permissions     *GamePermissions       `protobuf:"bytes,8,opt,name=permissions,proto3" json:"permissions,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GameFiles) Reset() {
	*x = GameFiles{}
	mi := &file_api_proto_games_game_service_v1_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameFiles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameFiles) ProtoMessage() {}

func (x *GameFiles) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_games_game_service_v1_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameFiles.ProtoReflect.Descriptor instead.
func (*GameFiles) Descriptor() ([]byte, []int) {
	return file_api_proto_games_game_service_v1_proto_rawDescGZIP(), []int{19}
}

func (x *GameFiles) GetDataDirectory() string {
	if x != nil {
		return x.DataDirectory
	}
	return ""
}

func (x *GameFiles) GetSaveDirectory() string {
	if x != nil {
		return x.SaveDirectory
	}
	return ""
}

func (x *GameFiles) GetConfigDirectory() string {
	if x != nil {
		return x.ConfigDirectory
	}
	return ""
}

func (x *GameFiles) GetLogDirectory() string {
	if x != nil {
		return x.LogDirectory
	}
	return ""
}

func (x *GameFiles) GetTempDirectory() string {
	if x != nil {
		return x.TempDirectory
	}
	return ""
}

func (x *GameFiles) GetSharedFiles() []string {
	if x != nil {
		return x.SharedFiles
	}
	return nil
}

func (x *GameFiles) GetUserFiles() []string {
	if x != nil {
		return x.UserFiles
	}
	return nil
}

func (x *GameFiles) GetPermissions() *GamePermissions {
	if x != nil {
		return x.Permissions
	}
	return nil
}

// GamePermissions represents file permissions
type GamePermissions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DataDirectory string                 `protobuf:"bytes,1,opt,name=data_directory,json=dataDirectory,proto3" json:"data_directory,omitempty"`
	SaveDirectory string                 `protobuf:"bytes,2,opt,name=save_directory,json=saveDirectory,proto3" json:"save_directory,omitempty"`
	UserFiles     string                 `protobuf:"bytes,3,opt,name=user_files,json=userFiles,proto3" json:"user_files,omitempty"`
	LogFiles      string                 `protobuf:"bytes,4,opt,name=log_files,json=logFiles,proto3" json:"log_files,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GamePermissions) Reset() {
	*x = GamePermissions{}
	mi := &file_api_proto_games_game_service_v1_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GamePermissions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GamePermissions) ProtoMessage() {}

func (x *GamePermissions) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_games_game_service_v1_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GamePermissions.ProtoReflect.Descriptor instead.
func (*GamePermissions) Descriptor() ([]byte, []int) {
	return file_api_proto_games_game_service_v1_proto_rawDescGZIP(), []int{20}
}

func (x *GamePermissions) GetDataDirectory() string {
	if x != nil {
		return x.DataDirectory
	}
	return ""
}

func (x *GamePermissions) GetSaveDirectory() string {
	if x != nil {
		return x.SaveDirectory
	}
	return ""
}

func (x *GamePermissions) GetUserFiles() string {
	if x != nil {
		return x.UserFiles
	}
	return ""
}

func (x *GamePermissions) GetLogFiles() string {
	if x != nil {
		return x.LogFiles
	}
	return ""
}

// GameSettings represents game-specific settings
type GameSettings struct {
	state                     protoimpl.MessageState `protogen:"open.v1"`
	MaxPlayers                int32                  `protobuf:"varint,1,opt,name=max_players,json=maxPlayers,proto3" json:"max_players,omitempty"`
	MaxSessionDurationSeconds int64                  `protobuf:"varint,2,opt,name=max_session_duration_seconds,json=maxSessionDurationSeconds,proto3" json:"max_session_duration_seconds,omitempty"`
	IdleTimeoutSeconds        int64                  `protobuf:"varint,3,opt,name=idle_timeout_seconds,json=idleTimeoutSeconds,proto3" json:"idle_timeout_seconds,omitempty"`
	SaveIntervalSeconds       int64                  `protobuf:"varint,4,opt,name=save_interval_seconds,json=saveIntervalSeconds,proto3" json:"save_interval_seconds,omitempty"`
	AutoSave                  bool                   `protobuf:"varint,5,opt,name=auto_save,json=autoSave,proto3" json:"auto_save,omitempty"`
	Spectating                *GameSpectating        `protobuf:"bytes,6,opt,name=spectating,proto3" json:"spectating,omitempty"`
	Recording                 *GameRecording         `protobuf:"bytes,7,opt,name=recording,proto3" json:"recording,omitempty"`
	Options                   map[string]string      `protobuf:"bytes,8,rep,name=options,proto3" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *GameSettings) Reset() {
	*x = GameSettings{}
	mi := &file_api_proto_games_game_service_v1_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameSettings) ProtoMessage() {}

func (x *GameSettings) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_games_game_service_v1_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameSettings.ProtoReflect.Descriptor instead.
func (*GameSettings) Descriptor() ([]byte, []int) {
	return file_api_proto_games_game_service_v1_proto_rawDescGZIP(), []int{21}
}

func (x *GameSettings) GetMaxPlayers() int32 {
	if x != nil {
		return x.MaxPlayers
	}
	return 0
}

func (x *GameSettings) GetMaxSessionDurationSeconds() int64 {
	if x != nil {
		return x.MaxSessionDurationSeconds
	}
	return 0
}

func (x *GameSettings) GetIdleTimeoutSeconds() int64 {
	if x != nil {
		return x.IdleTimeoutSeconds
	}
	return 0
}

func (x *GameSettings) GetSaveIntervalSeconds() int64 {
	if x != nil {
		return x.SaveIntervalSeconds
	}
	return 0
}

func (x *GameSettings) GetAutoSave() bool {
	if x != nil {
		return x.AutoSave
	}
	return false
}

func (x *GameSettings) GetSpectating() *GameSpectating {
	if x != nil {
		return x.Spectating
	}
	return nil
}

func (x *GameSettings) GetRecording() *GameRecording {
	if x != nil {
		return x.Recording
	}
	return nil
}

func (x *GameSettings) GetOptions() map[string]string {
	if x != nil {
		return x.Options
	}
	return nil
}

// GameSpectating represents spectating configuration
type GameSpectating struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	Enabled                 bool                   `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	MaxSpectatorsPerSession int32                  `protobuf:"varint,2,opt,name=max_spectators_per_session,json=maxSpectatorsPerSession,proto3" json:"max_spectators_per_session,omitempty"`
	SpectatorTimeoutSeconds int64                  `protobuf:"varint,3,opt,name=spectator_timeout_seconds,json=spectatorTimeoutSeconds,proto3" json:"spectator_timeout_seconds,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *GameSpectating) Reset() {
	*x = GameSpectating{}
	mi := &file_api_proto_games_game_service_v1_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameSpectating) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameSpectating) ProtoMessage() {}

func (x *GameSpectating) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_games_game_service_v1_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameSpectating.ProtoReflect.Descriptor instead.
func (*GameSpectating) Descriptor() ([]byte, []int) {
	return file_api_proto_games_game_service_v1_proto_rawDescGZIP(), []int{22}
}

func (x *GameSpectating) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *GameSpectating) GetMaxSpectatorsPerSession() int32 {
	if x != nil {
		return x.MaxSpectatorsPerSession
	}
	return 0
}

func (x *GameSpectating) GetSpectatorTimeoutSeconds() int64 {
	if x != nil {
		return x.SpectatorTimeoutSeconds
	}
	return 0
}

// GameRecording represents recording configuration
type GameRecording struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Enabled          bool                   `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Format           string                 `protobuf:"bytes,2,opt,name=format,proto3" json:"format,omitempty"`
	Compression      string                 `protobuf:"bytes,3,opt,name=compression,proto3" json:"compression,omitempty"`
	MaxFileSizeBytes int64                  `protobuf:"varint,4,opt,name=max_file_size_bytes,json=maxFileSizeBytes,proto3" json:"max_file_size_bytes,omitempty"`
	RetentionDays    int32                  `protobuf:"varint,5,opt,name=retention_days,json=retentionDays,proto3" json:"retention_days,omitempty"`
	AutoCleanup      bool                   `protobuf:"varint,6,opt,name=auto_cleanup,json=autoCleanup,proto3" json:"auto_cleanup,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GameRecording) Reset() {
	*x = GameRecording{}
	mi := &file_api_proto_games_game_service_v1_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameRecording) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameRecording) ProtoMessage() {}

func (x *GameRecording) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_games_game_service_v1_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameRecording.ProtoReflect.Descriptor instead.
func (*GameRecording) Descriptor() ([]byte, []int) {
	return file_api_proto_games_game_service_v1_proto_rawDescGZIP(), []int{23}
}

func (x *GameRecording) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *GameRecording) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *GameRecording) GetCompression() string {
	if x != nil {
		return x.Compression
	}
	return ""
}

func (x *GameRecording) GetMaxFileSizeBytes() int64 {
	if x != nil {
		return x.MaxFileSizeBytes
	}
	return 0
}

func (x *GameRecording) GetRetentionDays() int32 {
	if x != nil {
		return x.RetentionDays
	}
	return 0
}

func (x *GameRecording) GetAutoCleanup() bool {
	if x != nil {
		return x.AutoCleanup
	}
	return false
}

// GameResourceLimits represents resource limits
type GameResourceLimits struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CpuLimit      string                 `protobuf:"bytes,1,opt,name=cpu_limit,json=cpuLimit,proto3" json:"cpu_limit,omitempty"`
	MemoryLimit   string                 `protobuf:"bytes,2,opt,name=memory_limit,json=memoryLimit,proto3" json:"memory_limit,omitempty"`
	CpuRequest    string                 `protobuf:"bytes,3,opt,name=cpu_request,json=cpuRequest,proto3" json:"cpu_request,omitempty"`
	MemoryRequest string                 `protobuf:"bytes,4,opt,name=memory_request,json=memoryRequest,proto3" json:"memory_request,omitempty"`
	DiskLimit     string                 `protobuf:"bytes,5,opt,name=disk_limit,json=diskLimit,proto3" json:"disk_limit,omitempty"`
	NetworkLimit  string                 `protobuf:"bytes,6,opt,name=network_limit,json=networkLimit,proto3" json:"network_limit,omitempty"`
	PidsLimit     int32                  `protobuf:"varint,7,opt,name=pids_limit,json=pidsLimit,proto3" json:"pids_limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GameResourceLimits) Reset() {
	*x = GameResourceLimits{}
	mi := &file_api_proto_games_game_service_v1_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameResourceLimits) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameResourceLimits) ProtoMessage() {}

func (x *GameResourceLimits) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_games_game_service_v1_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameResourceLimits.ProtoReflect.Descriptor instead.
func (*GameResourceLimits) Descriptor() ([]byte, []int) {
	return file_api_proto_games_game_service_v1_proto_rawDescGZIP(), []int{24}
}

func (x *GameResourceLimits) GetCpuLimit() string {
	if x != nil {
		return x.CpuLimit
	}
	return ""
}

func (x *GameResourceLimits) GetMemoryLimit() string {
	if x != nil {
		return x.MemoryLimit
	}
	return ""
}

func (x *GameResourceLimits) GetCpuRequest() string {
	if x != nil {
		return x.CpuRequest
	}
	return ""
}

func (x *GameResourceLimits) GetMemoryRequest() string {
	if x != nil {
		return x.MemoryRequest
	}
	return ""
}

func (x *GameResourceLimits) GetDiskLimit() string {
	if x != nil {
		return x.DiskLimit
	}
	return ""
}

func (x *GameResourceLimits) GetNetworkLimit() string {
	if x != nil {
		return x.NetworkLimit
	}
	return ""
}

func (x *GameResourceLimits) GetPidsLimit() int32 {
	if x != nil {
		return x.PidsLimit
	}
	return 0
}

// GameResourceUsage represents current resource usage
type GameResourceUsage struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	CpuUsagePercent  float64                `protobuf:"fixed64,1,opt,name=cpu_usage_percent,json=cpuUsagePercent,proto3" json:"cpu_usage_percent,omitempty"`
	MemoryUsageBytes int64                  `protobuf:"varint,2,opt,name=memory_usage_bytes,json=memoryUsageBytes,proto3" json:"memory_usage_bytes,omitempty"`
	DiskUsageBytes   int64                  `protobuf:"varint,3,opt,name=disk_usage_bytes,json=diskUsageBytes,proto3" json:"disk_usage_bytes,omitempty"`
	NetworkRxBytes   int64                  `protobuf:"varint,4,opt,name=network_rx_bytes,json=networkRxBytes,proto3" json:"network_rx_bytes,omitempty"`
	NetworkTxBytes   int64                  `protobuf:"varint,5,opt,name=network_tx_bytes,json=networkTxBytes,proto3" json:"network_tx_bytes,omitempty"`
	PidsCount        int32                  `protobuf:"varint,6,opt,name=pids_count,json=pidsCount,proto3" json:"pids_count,omitempty"`
	Timestamp        *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GameResourceUsage) Reset() {
	*x = GameResourceUsage{}
	mi := &file_api_proto_games_game_service_v1_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameResourceUsage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameResourceUsage) ProtoMessage() {}

func (x *GameResourceUsage) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_games_game_service_v1_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameResourceUsage.ProtoReflect.Descriptor instead.
func (*GameResourceUsage) Descriptor() ([]byte, []int) {
	return file_api_proto_games_game_service_v1_proto_rawDescGZIP(), []int{25}
}

func (x *GameResourceUsage) GetCpuUsagePercent() float64 {
	if x != nil {
		return x.CpuUsagePercent
	}
	return 0
}

func (x *GameResourceUsage) GetMemoryUsageBytes() int64 {
	if x != nil {
		return x.MemoryUsageBytes
	}
	return 0
}

func (x *GameResourceUsage) GetDiskUsageBytes() int64 {
	if x != nil {
		return x.DiskUsageBytes
	}
	return 0
}

func (x *GameResourceUsage) GetNetworkRxBytes() int64 {
	if x != nil {
		return x.NetworkRxBytes
	}
	return 0
}

func (x *GameResourceUsage) GetNetworkTxBytes() int64 {
	if x != nil {
		return x.NetworkTxBytes
	}
	return 0
}

func (x *GameResourceUsage) GetPidsCount() int32 {
	if x != nil {
		return x.PidsCount
	}
	return 0
}

func (x *GameResourceUsage) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

// GameContainer represents container configuration
type GameContainer struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Image           string                 `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	Tag             string                 `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag,omitempty"`
	Registry        string                 `protobuf:"bytes,3,opt,name=registry,proto3" json:"registry,omitempty"`
	PullPolicy      string                 `protobuf:"bytes,4,opt,name=pull_policy,json=pullPolicy,proto3" json:"pull_policy,omitempty"`
	Volumes         []*GameVolume          `protobuf:"bytes,5,rep,name=volumes,proto3" json:"volumes,omitempty"`
	Environment     map[string]string      `protobuf:"bytes,6,rep,name=environment,proto3" json:"environment,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	SecurityContext *GameSecurityContext   `protobuf:"bytes,7,opt,name=security_context,json=securityContext,proto3" json:"security_context,omitempty"`
	NetworkMode     string                 `protobuf:"bytes,8,opt,name=network_mode,json=networkMode,proto3" json:"network_mode,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GameContainer) Reset() {
	*x = GameContainer{}
	mi := &file_api_proto_games_game_service_v1_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameContainer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameContainer) ProtoMessage() {}

func (x *GameContainer) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_games_game_service_v1_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameContainer.ProtoReflect.Descriptor instead.
func (*GameContainer) Descriptor() ([]byte, []int) {
	return file_api_proto_games_game_service_v1_proto_rawDescGZIP(), []int{26}
}

func (x *GameContainer) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *GameContainer) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *GameContainer) GetRegistry() string {
	if x != nil {
		return x.Registry
	}
	return ""
}

func (x *GameContainer) GetPullPolicy() string {
	if x != nil {
		return x.PullPolicy
	}
	return ""
}

func (x *GameContainer) GetVolumes() []*GameVolume {
	if x != nil {
		return x.Volumes
	}
	return nil
}

func (x *GameContainer) GetEnvironment() map[string]string {
	if x != nil {
		return x.Environment
	}
	return nil
}

func (x *GameContainer) GetSecurityContext() *GameSecurityContext {
	if x != nil {
		return x.SecurityContext
	}
	return nil
}

func (x *GameContainer) GetNetworkMode() string {
	if x != nil {
		return x.NetworkMode
	}
	return ""
}

// GameVolume represents volume configuration
type GameVolume struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	HostPath      string                 `protobuf:"bytes,2,opt,name=host_path,json=hostPath,proto3" json:"host_path,omitempty"`
	MountPath     string                 `protobuf:"bytes,3,opt,name=mount_path,json=mountPath,proto3" json:"mount_path,omitempty"`
	ReadOnly      bool                   `protobuf:"varint,4,opt,name=read_only,json=readOnly,proto3" json:"read_only,omitempty"`
	VolumeType    string                 `protobuf:"bytes,5,opt,name=volume_type,json=volumeType,proto3" json:"volume_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GameVolume) Reset() {
	*x = GameVolume{}
	mi := &file_api_proto_games_game_service_v1_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameVolume) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameVolume) ProtoMessage() {}

func (x *GameVolume) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_games_game_service_v1_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameVolume.ProtoReflect.Descriptor instead.
func (*GameVolume) Descriptor() ([]byte, []int) {
	return file_api_proto_games_game_service_v1_proto_rawDescGZIP(), []int{27}
}

func (x *GameVolume) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GameVolume) GetHostPath() string {
	if x != nil {
		return x.HostPath
	}
	return ""
}

func (x *GameVolume) GetMountPath() string {
	if x != nil {
		return x.MountPath
	}
	return ""
}

func (x *GameVolume) GetReadOnly() bool {
	if x != nil {
		return x.ReadOnly
	}
	return false
}

func (x *GameVolume) GetVolumeType() string {
	if x != nil {
		return x.VolumeType
	}
	return ""
}

// GameSecurityContext represents security context
type GameSecurityContext struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	RunAsUser              int32                  `protobuf:"varint,1,opt,name=run_as_user,json=runAsUser,proto3" json:"run_as_user,omitempty"`
	RunAsGroup             int32                  `protobuf:"varint,2,opt,name=run_as_group,json=runAsGroup,proto3" json:"run_as_group,omitempty"`
	FsGroup                int32                  `protobuf:"varint,3,opt,name=fs_group,json=fsGroup,proto3" json:"fs_group,omitempty"`
	Privileged             bool                   `protobuf:"varint,4,opt,name=privileged,proto3" json:"privileged,omitempty"`
	ReadOnlyRootFilesystem bool                   `protobuf:"varint,5,opt,name=read_only_root_filesystem,json=readOnlyRootFilesystem,proto3" json:"read_only_root_filesystem,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *GameSecurityContext) Reset() {
	*x = GameSecurityContext{}
	mi := &file_api_proto_games_game_service_v1_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameSecurityContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameSecurityContext) ProtoMessage() {}

func (x *GameSecurityContext) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_games_game_service_v1_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameSecurityContext.ProtoReflect.Descriptor instead.
func (*GameSecurityContext) Descriptor() ([]byte, []int) {
	return file_api_proto_games_game_service_v1_proto_rawDescGZIP(), []int{28}
}

func (x *GameSecurityContext) GetRunAsUser() int32 {
	if x != nil {
		return x.RunAsUser
	}
	return 0
}

func (x *GameSecurityContext) GetRunAsGroup() int32 {
	if x != nil {
		return x.RunAsGroup
	}
	return 0
}

func (x *GameSecurityContext) GetFsGroup() int32 {
	if x != nil {
		return x.FsGroup
	}
	return 0
}

func (x *GameSecurityContext) GetPrivileged() bool {
	if x != nil {
		return x.Privileged
	}
	return false
}

func (x *GameSecurityContext) GetReadOnlyRootFilesystem() bool {
	if x != nil {
		return x.ReadOnlyRootFilesystem
	}
	return false
}

// GameNetworking represents networking configuration
type GameNetworking struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Mode           string                 `protobuf:"bytes,1,opt,name=mode,proto3" json:"mode,omitempty"`
	Ports          []*GamePort            `protobuf:"bytes,2,rep,name=ports,proto3" json:"ports,omitempty"`
	ExposedPorts   []string               `protobuf:"bytes,3,rep,name=exposed_ports,json=exposedPorts,proto3" json:"exposed_ports,omitempty"`
	NetworkAliases []string               `protobuf:"bytes,4,rep,name=network_aliases,json=networkAliases,proto3" json:"network_aliases,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GameNetworking) Reset() {
	*x = GameNetworking{}
	mi := &file_api_proto_games_game_service_v1_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameNetworking) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameNetworking) ProtoMessage() {}

func (x *GameNetworking) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_games_game_service_v1_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameNetworking.ProtoReflect.Descriptor instead.
func (*GameNetworking) Descriptor() ([]byte, []int) {
	return file_api_proto_games_game_service_v1_proto_rawDescGZIP(), []int{29}
}

func (x *GameNetworking) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

func (x *GameNetworking) GetPorts() []*GamePort {
	if x != nil {
		return x.Ports
	}
	return nil
}

func (x *GameNetworking) GetExposedPorts() []string {
	if x != nil {
		return x.ExposedPorts
	}
	return nil
}

func (x *GameNetworking) GetNetworkAliases() []string {
	if x != nil {
		return x.NetworkAliases
	}
	return nil
}

// GamePort represents port configuration
type GamePort struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContainerPort int32                  `protobuf:"varint,1,opt,name=container_port,json=containerPort,proto3" json:"container_port,omitempty"`
	HostPort      int32                  `protobuf:"varint,2,opt,name=host_port,json=hostPort,proto3" json:"host_port,omitempty"`
	Protocol      string                 `protobuf:"bytes,3,opt,name=protocol,proto3" json:"protocol,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GamePort) Reset() {
	*x = GamePort{}
	mi := &file_api_proto_games_game_service_v1_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GamePort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GamePort) ProtoMessage() {}

func (x *GamePort) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_games_game_service_v1_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GamePort.ProtoReflect.Descriptor instead.
func (*GamePort) Descriptor() ([]byte, []int) {
	return file_api_proto_games_game_service_v1_proto_rawDescGZIP(), []int{30}
}

func (x *GamePort) GetContainerPort() int32 {
	if x != nil {
		return x.ContainerPort
	}
	return 0
}

func (x *GamePort) GetHostPort() int32 {
	if x != nil {
		return x.HostPort
	}
	return 0
}

func (x *GamePort) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

// GameStats represents game statistics
type GameStats struct {
	state                         protoimpl.MessageState `protogen:"open.v1"`
	TotalSessions                 int32                  `protobuf:"varint,1,opt,name=total_sessions,json=totalSessions,proto3" json:"total_sessions,omitempty"`
	ActiveSessions                int32                  `protobuf:"varint,2,opt,name=active_sessions,json=activeSessions,proto3" json:"active_sessions,omitempty"`
	TotalPlaytimeSeconds          int64                  `protobuf:"varint,3,opt,name=total_playtime_seconds,json=totalPlaytimeSeconds,proto3" json:"total_playtime_seconds,omitempty"`
	AverageSessionDurationSeconds int64                  `protobuf:"varint,4,opt,name=average_session_duration_seconds,json=averageSessionDurationSeconds,proto3" json:"average_session_duration_seconds,omitempty"`
	UniquePlayers                 int32                  `protobuf:"varint,5,opt,name=unique_players,json=uniquePlayers,proto3" json:"unique_players,omitempty"`
	LastPlayed                    *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=last_played,json=lastPlayed,proto3" json:"last_played,omitempty"`
	DailyStats                    map[string]int64       `protobuf:"bytes,7,rep,name=daily_stats,json=dailyStats,proto3" json:"daily_stats,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *GameStats) Reset() {
	*x = GameStats{}
	mi := &file_api_proto_games_game_service_v1_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameStats) ProtoMessage() {}

func (x *GameStats) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_games_game_service_v1_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameStats.ProtoReflect.Descriptor instead.
func (*GameStats) Descriptor() ([]byte, []int) {
	return file_api_proto_games_game_service_v1_proto_rawDescGZIP(), []int{31}
}

func (x *GameStats) GetTotalSessions() int32 {
	if x != nil {
		return x.TotalSessions
	}
	return 0
}

func (x *GameStats) GetActiveSessions() int32 {
	if x != nil {
		return x.ActiveSessions
	}
	return 0
}

func (x *GameStats) GetTotalPlaytimeSeconds() int64 {
	if x != nil {
		return x.TotalPlaytimeSeconds
	}
	return 0
}

func (x *GameStats) GetAverageSessionDurationSeconds() int64 {
	if x != nil {
		return x.AverageSessionDurationSeconds
	}
	return 0
}

func (x *GameStats) GetUniquePlayers() int32 {
	if x != nil {
		return x.UniquePlayers
	}
	return 0
}

func (x *GameStats) GetLastPlayed() *timestamppb.Timestamp {
	if x != nil {
		return x.LastPlayed
	}
	return nil
}

func (x *GameStats) GetDailyStats() map[string]int64 {
	if x != nil {
		return x.DailyStats
	}
	return nil
}

// GameSessionStats represents session statistics
type GameSessionStats struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	DurationSeconds   int64                  `protobuf:"varint,1,opt,name=duration_seconds,json=durationSeconds,proto3" json:"duration_seconds,omitempty"`
	BytesTransferred  int64                  `protobuf:"varint,2,opt,name=bytes_transferred,json=bytesTransferred,proto3" json:"bytes_transferred,omitempty"`
	CommandsExecuted  int32                  `protobuf:"varint,3,opt,name=commands_executed,json=commandsExecuted,proto3" json:"commands_executed,omitempty"`
	SpectatorsCount   int32                  `protobuf:"varint,4,opt,name=spectators_count,json=spectatorsCount,proto3" json:"spectators_count,omitempty"`
	GameSpecificStats map[string]string      `protobuf:"bytes,5,rep,name=game_specific_stats,json=gameSpecificStats,proto3" json:"game_specific_stats,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *GameSessionStats) Reset() {
	*x = GameSessionStats{}
	mi := &file_api_proto_games_game_service_v1_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameSessionStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameSessionStats) ProtoMessage() {}

func (x *GameSessionStats) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_games_game_service_v1_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameSessionStats.ProtoReflect.Descriptor instead.
func (*GameSessionStats) Descriptor() ([]byte, []int) {
	return file_api_proto_games_game_service_v1_proto_rawDescGZIP(), []int{32}
}

func (x *GameSessionStats) GetDurationSeconds() int64 {
	if x != nil {
		return x.DurationSeconds
	}
	return 0
}

func (x *GameSessionStats) GetBytesTransferred() int64 {
	if x != nil {
		return x.BytesTransferred
	}
	return 0
}

func (x *GameSessionStats) GetCommandsExecuted() int32 {
	if x != nil {
		return x.CommandsExecuted
	}
	return 0
}

func (x *GameSessionStats) GetSpectatorsCount() int32 {
	if x != nil {
		return x.SpectatorsCount
	}
	return 0
}

func (x *GameSessionStats) GetGameSpecificStats() map[string]string {
	if x != nil {
		return x.GameSpecificStats
	}
	return nil
}

// GameEvent represents a game event
type GameEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventId       string                 `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	SessionId     string                 `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	EventType     string                 `protobuf:"bytes,3,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"` // "session_start", "session_end", "input", "output", "error", "state_change"
	EventData     []byte                 `protobuf:"bytes,4,opt,name=event_data,json=eventData,proto3" json:"event_data,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GameEvent) Reset() {
	*x = GameEvent{}
	mi := &file_api_proto_games_game_service_v1_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameEvent) ProtoMessage() {}

func (x *GameEvent) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_games_game_service_v1_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameEvent.ProtoReflect.Descriptor instead.
func (*GameEvent) Descriptor() ([]byte, []int) {
	return file_api_proto_games_game_service_v1_proto_rawDescGZIP(), []int{33}
}

func (x *GameEvent) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *GameEvent) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *GameEvent) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *GameEvent) GetEventData() []byte {
	if x != nil {
		return x.EventData
	}
	return nil
}

func (x *GameEvent) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *GameEvent) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

// GameData represents game data (for streaming)
type GameData struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	SessionId      string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	DataType       string                 `protobuf:"bytes,2,opt,name=data_type,json=dataType,proto3" json:"data_type,omitempty"` // "output", "input", "state", "metadata"
	Data           []byte                 `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	SequenceNumber int64                  `protobuf:"varint,4,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	Timestamp      *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Metadata       map[string]string      `protobuf:"bytes,6,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GameData) Reset() {
	*x = GameData{}
	mi := &file_api_proto_games_game_service_v1_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameData) ProtoMessage() {}

func (x *GameData) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_games_game_service_v1_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameData.ProtoReflect.Descriptor instead.
func (*GameData) Descriptor() ([]byte, []int) {
	return file_api_proto_games_game_service_v1_proto_rawDescGZIP(), []int{34}
}

func (x *GameData) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *GameData) GetDataType() string {
	if x != nil {
		return x.DataType
	}
	return ""
}

func (x *GameData) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GameData) GetSequenceNumber() int64 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

func (x *GameData) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *GameData) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

var File_api_proto_games_game_service_v1_proto protoreflect.FileDescriptor

const file_api_proto_games_game_service_v1_proto_rawDesc = "" +
	"\n" +
	"%api/proto/games/game_service_v1.proto\x12\x14dungeongate.games.v1\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xbd\x03\n" +
	"\x10StartGameRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busername\x12\x17\n" +
	"\agame_id\x18\x03 \x01(\tR\x06gameId\x12\x1d\n" +
	"\n" +
	"session_id\x18\x04 \x01(\tR\tsessionId\x12Y\n" +
	"\venvironment\x18\x05 \x03(\v27.dungeongate.games.v1.StartGameRequest.EnvironmentEntryR\venvironment\x12Q\n" +
	"\x0fresource_limits\x18\x06 \x01(\v2(.dungeongate.games.v1.GameResourceLimitsR\x0eresourceLimits\x12#\n" +
	"\rspectator_ids\x18\a \x03(\tR\fspectatorIds\x12)\n" +
	"\x10enable_recording\x18\b \x01(\bR\x0fenableRecording\x1a>\n" +
	"\x10EnvironmentEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"f\n" +
	"\x11StartGameResponse\x12;\n" +
	"\asession\x18\x01 \x01(\v2!.dungeongate.games.v1.GameSessionR\asession\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"w\n" +
	"\x0fStopGameRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x14\n" +
	"\x05force\x18\x03 \x01(\bR\x05force\x12\x16\n" +
	"\x06reason\x18\x04 \x01(\tR\x06reason\"\x8b\x01\n" +
	"\x10StopGameResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\x12G\n" +
	"\vfinal_stats\x18\x03 \x01(\v2&.dungeongate.games.v1.GameSessionStatsR\n" +
	"finalStats\"6\n" +
	"\x15GetGameSessionRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\"k\n" +
	"\x16GetGameSessionResponse\x12;\n" +
	"\asession\x18\x01 \x01(\v2!.dungeongate.games.v1.GameSessionR\asession\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"{\n" +
	"\x19ListActiveSessionsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x17\n" +
	"\agame_id\x18\x02 \x01(\tR\x06gameId\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x04 \x01(\x05R\x06offset\"\x92\x01\n" +
	"\x1aListActiveSessionsResponse\x12=\n" +
	"\bsessions\x18\x01 \x03(\v2!.dungeongate.games.v1.GameSessionR\bsessions\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\x12\x14\n" +
	"\x05error\x18\x03 \x01(\tR\x05error\"d\n" +
	"\x1aListAvailableGamesResponse\x120\n" +
	"\x05games\x18\x01 \x03(\v2\x1a.dungeongate.games.v1.GameR\x05games\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"-\n" +
	"\x12GetGameInfoRequest\x12\x17\n" +
	"\agame_id\x18\x01 \x01(\tR\x06gameId\"\x92\x01\n" +
	"\x13GetGameInfoResponse\x12.\n" +
	"\x04game\x18\x01 \x01(\v2\x1a.dungeongate.games.v1.GameR\x04game\x125\n" +
	"\x05stats\x18\x02 \x01(\v2\x1f.dungeongate.games.v1.GameStatsR\x05stats\x12\x14\n" +
	"\x05error\x18\x03 \x01(\tR\x05error\"Y\n" +
	"\x17StreamGameEventsRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12\x1f\n" +
	"\vevent_types\x18\x02 \x03(\tR\n" +
	"eventTypes\"\xd2\x01\n" +
	"\x13AttachToGameRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12!\n" +
	"\fspectator_id\x18\x02 \x01(\tR\vspectatorId\x12-\n" +
	"\x12spectator_username\x18\x03 \x01(\tR\x11spectatorUsername\x12#\n" +
	"\rreceive_input\x18\x04 \x01(\bR\freceiveInput\x12%\n" +
	"\x0ereceive_output\x18\x05 \x01(\bR\rreceiveOutput\"\xc6\x01\n" +
	"\x14SendGameInputRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x1d\n" +
	"\n" +
	"input_data\x18\x03 \x01(\fR\tinputData\x12\x1d\n" +
	"\n" +
	"input_type\x18\x04 \x01(\tR\tinputType\x128\n" +
	"\ttimestamp\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"G\n" +
	"\x15SendGameInputResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"\xeb\x01\n" +
	"\x0eHealthResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12K\n" +
	"\adetails\x18\x02 \x03(\v21.dungeongate.games.v1.HealthResponse.DetailsEntryR\adetails\x128\n" +
	"\ttimestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x1a:\n" +
	"\fDetailsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xb4\x05\n" +
	"\vGameSession\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x1a\n" +
	"\busername\x18\x03 \x01(\tR\busername\x12\x17\n" +
	"\agame_id\x18\x04 \x01(\tR\x06gameId\x12?\n" +
	"\x06status\x18\x05 \x01(\x0e2'.dungeongate.games.v1.GameSessionStatusR\x06status\x129\n" +
	"\n" +
	"start_time\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x12?\n" +
	"\rlast_activity\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\flastActivity\x12!\n" +
	"\fcontainer_id\x18\b \x01(\tR\vcontainerId\x12\x19\n" +
	"\bpod_name\x18\t \x01(\tR\apodName\x12N\n" +
	"\x0eresource_usage\x18\n" +
	" \x01(\v2'.dungeongate.games.v1.GameResourceUsageR\rresourceUsage\x12\x1e\n" +
	"\n" +
	"spectators\x18\v \x03(\tR\n" +
	"spectators\x12+\n" +
	"\x11recording_enabled\x18\f \x01(\bR\x10recordingEnabled\x12%\n" +
	"\x0erecording_path\x18\r \x01(\tR\rrecordingPath\x12K\n" +
	"\bmetadata\x18\x0e \x03(\v2/.dungeongate.games.v1.GameSession.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xdb\x05\n" +
	"\x04Game\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1d\n" +
	"\n" +
	"short_name\x18\x03 \x01(\tR\tshortName\x12\x18\n" +
	"\aversion\x18\x04 \x01(\tR\aversion\x12\x18\n" +
	"\aenabled\x18\x05 \x01(\bR\aenabled\x12 \n" +
	"\vdescription\x18\x06 \x01(\tR\vdescription\x12\x1e\n" +
	"\n" +
	"categories\x18\a \x03(\tR\n" +
	"categories\x128\n" +
	"\x06binary\x18\b \x01(\v2 .dungeongate.games.v1.GameBinaryR\x06binary\x125\n" +
	"\x05files\x18\t \x01(\v2\x1f.dungeongate.games.v1.GameFilesR\x05files\x12>\n" +
	"\bsettings\x18\n" +
	" \x01(\v2\".dungeongate.games.v1.GameSettingsR\bsettings\x12M\n" +
	"\venvironment\x18\v \x03(\v2+.dungeongate.games.v1.Game.EnvironmentEntryR\venvironment\x12Q\n" +
	"\x0fresource_limits\x18\f \x01(\v2(.dungeongate.games.v1.GameResourceLimitsR\x0eresourceLimits\x12A\n" +
	"\tcontainer\x18\r \x01(\v2#.dungeongate.games.v1.GameContainerR\tcontainer\x12D\n" +
	"\n" +
	"networking\x18\x0e \x01(\v2$.dungeongate.games.v1.GameNetworkingR\n" +
	"networking\x1a>\n" +
	"\x10EnvironmentEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xad\x01\n" +
	"\n" +
	"GameBinary\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12\x12\n" +
	"\x04args\x18\x02 \x03(\tR\x04args\x12+\n" +
	"\x11working_directory\x18\x03 \x01(\tR\x10workingDirectory\x12\x12\n" +
	"\x04user\x18\x04 \x01(\tR\x04user\x12\x14\n" +
	"\x05group\x18\x05 \x01(\tR\x05group\x12 \n" +
	"\vpermissions\x18\x06 \x01(\tR\vpermissions\"\xdb\x02\n" +
	"\tGameFiles\x12%\n" +
	"\x0edata_directory\x18\x01 \x01(\tR\rdataDirectory\x12%\n" +
	"\x0esave_directory\x18\x02 \x01(\tR\rsaveDirectory\x12)\n" +
	"\x10config_directory\x18\x03 \x01(\tR\x0fconfigDirectory\x12#\n" +
	"\rlog_directory\x18\x04 \x01(\tR\flogDirectory\x12%\n" +
	"\x0etemp_directory\x18\x05 \x01(\tR\rtempDirectory\x12!\n" +
	"\fshared_files\x18\x06 \x03(\tR\vsharedFiles\x12\x1d\n" +
	"\n" +
	"user_files\x18\a \x03(\tR\tuserFiles\x12G\n" +
	"\vpermissions\x18\b \x01(\v2%.dungeongate.games.v1.GamePermissionsR\vpermissions\"\x9b\x01\n" +
	"\x0fGamePermissions\x12%\n" +
	"\x0edata_directory\x18\x01 \x01(\tR\rdataDirectory\x12%\n" +
	"\x0esave_directory\x18\x02 \x01(\tR\rsaveDirectory\x12\x1d\n" +
	"\n" +
	"user_files\x18\x03 \x01(\tR\tuserFiles\x12\x1b\n" +
	"\tlog_files\x18\x04 \x01(\tR\blogFiles\"\x83\x04\n" +
	"\fGameSettings\x12\x1f\n" +
	"\vmax_players\x18\x01 \x01(\x05R\n" +
	"maxPlayers\x12?\n" +
	"\x1cmax_session_duration_seconds\x18\x02 \x01(\x03R\x19maxSessionDurationSeconds\x120\n" +
	"\x14idle_timeout_seconds\x18\x03 \x01(\x03R\x12idleTimeoutSeconds\x122\n" +
	"\x15save_interval_seconds\x18\x04 \x01(\x03R\x13saveIntervalSeconds\x12\x1b\n" +
	"\tauto_save\x18\x05 \x01(\bR\bautoSave\x12D\n" +
	"\n" +
	"spectating\x18\x06 \x01(\v2$.dungeongate.games.v1.GameSpectatingR\n" +
	"spectating\x12A\n" +
	"\trecording\x18\a \x01(\v2#.dungeongate.games.v1.GameRecordingR\trecording\x12I\n" +
	"\aoptions\x18\b \x03(\v2/.dungeongate.games.v1.GameSettings.OptionsEntryR\aoptions\x1a:\n" +
	"\fOptionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xa3\x01\n" +
	"\x0eGameSpectating\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12;\n" +
	"\x1amax_spectators_per_session\x18\x02 \x01(\x05R\x17maxSpectatorsPerSession\x12:\n" +
	"\x19spectator_timeout_seconds\x18\x03 \x01(\x03R\x17spectatorTimeoutSeconds\"\xdc\x01\n" +
	"\rGameRecording\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12\x16\n" +
	"\x06format\x18\x02 \x01(\tR\x06format\x12 \n" +
	"\vcompression\x18\x03 \x01(\tR\vcompression\x12-\n" +
	"\x13max_file_size_bytes\x18\x04 \x01(\x03R\x10maxFileSizeBytes\x12%\n" +
	"\x0eretention_days\x18\x05 \x01(\x05R\rretentionDays\x12!\n" +
	"\fauto_cleanup\x18\x06 \x01(\bR\vautoCleanup\"\xff\x01\n" +
	"\x12GameResourceLimits\x12\x1b\n" +
	"\tcpu_limit\x18\x01 \x01(\tR\bcpuLimit\x12!\n" +
	"\fmemory_limit\x18\x02 \x01(\tR\vmemoryLimit\x12\x1f\n" +
	"\vcpu_request\x18\x03 \x01(\tR\n" +
	"cpuRequest\x12%\n" +
	"\x0ememory_request\x18\x04 \x01(\tR\rmemoryRequest\x12\x1d\n" +
	"\n" +
	"disk_limit\x18\x05 \x01(\tR\tdiskLimit\x12#\n" +
	"\rnetwork_limit\x18\x06 \x01(\tR\fnetworkLimit\x12\x1d\n" +
	"\n" +
	"pids_limit\x18\a \x01(\x05R\tpidsLimit\"\xc4\x02\n" +
	"\x11GameResourceUsage\x12*\n" +
	"\x11cpu_usage_percent\x18\x01 \x01(\x01R\x0fcpuUsagePercent\x12,\n" +
	"\x12memory_usage_bytes\x18\x02 \x01(\x03R\x10memoryUsageBytes\x12(\n" +
	"\x10disk_usage_bytes\x18\x03 \x01(\x03R\x0ediskUsageBytes\x12(\n" +
	"\x10network_rx_bytes\x18\x04 \x01(\x03R\x0enetworkRxBytes\x12(\n" +
	"\x10network_tx_bytes\x18\x05 \x01(\x03R\x0enetworkTxBytes\x12\x1d\n" +
	"\n" +
	"pids_count\x18\x06 \x01(\x05R\tpidsCount\x128\n" +
	"\ttimestamp\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"\xc1\x03\n" +
	"\rGameContainer\x12\x14\n" +
	"\x05image\x18\x01 \x01(\tR\x05image\x12\x10\n" +
	"\x03tag\x18\x02 \x01(\tR\x03tag\x12\x1a\n" +
	"\bregistry\x18\x03 \x01(\tR\bregistry\x12\x1f\n" +
	"\vpull_policy\x18\x04 \x01(\tR\n" +
	"pullPolicy\x12:\n" +
	"\avolumes\x18\x05 \x03(\v2 .dungeongate.games.v1.GameVolumeR\avolumes\x12V\n" +
	"\venvironment\x18\x06 \x03(\v24.dungeongate.games.v1.GameContainer.EnvironmentEntryR\venvironment\x12T\n" +
	"\x10security_context\x18\a \x01(\v2).dungeongate.games.v1.GameSecurityContextR\x0fsecurityContext\x12!\n" +
	"\fnetwork_mode\x18\b \x01(\tR\vnetworkMode\x1a>\n" +
	"\x10EnvironmentEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x9a\x01\n" +
	"\n" +
	"GameVolume\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1b\n" +
	"\thost_path\x18\x02 \x01(\tR\bhostPath\x12\x1d\n" +
	"\n" +
	"mount_path\x18\x03 \x01(\tR\tmountPath\x12\x1b\n" +
	"\tread_only\x18\x04 \x01(\bR\breadOnly\x12\x1f\n" +
	"\vvolume_type\x18\x05 \x01(\tR\n" +
	"volumeType\"\xcd\x01\n" +
	"\x13GameSecurityContext\x12\x1e\n" +
	"\vrun_as_user\x18\x01 \x01(\x05R\trunAsUser\x12 \n" +
	"\frun_as_group\x18\x02 \x01(\x05R\n" +
	"runAsGroup\x12\x19\n" +
	"\bfs_group\x18\x03 \x01(\x05R\afsGroup\x12\x1e\n" +
	"\n" +
	"privileged\x18\x04 \x01(\bR\n" +
	"privileged\x129\n" +
	"\x19read_only_root_filesystem\x18\x05 \x01(\bR\x16readOnlyRootFilesystem\"\xa8\x01\n" +
	"\x0eGameNetworking\x12\x12\n" +
	"\x04mode\x18\x01 \x01(\tR\x04mode\x124\n" +
	"\x05ports\x18\x02 \x03(\v2\x1e.dungeongate.games.v1.GamePortR\x05ports\x12#\n" +
	"\rexposed_ports\x18\x03 \x03(\tR\fexposedPorts\x12'\n" +
	"\x0fnetwork_aliases\x18\x04 \x03(\tR\x0enetworkAliases\"j\n" +
	"\bGamePort\x12%\n" +
	"\x0econtainer_port\x18\x01 \x01(\x05R\rcontainerPort\x12\x1b\n" +
	"\thost_port\x18\x02 \x01(\x05R\bhostPort\x12\x1a\n" +
	"\bprotocol\x18\x03 \x01(\tR\bprotocol\"\xcf\x03\n" +
	"\tGameStats\x12%\n" +
	"\x0etotal_sessions\x18\x01 \x01(\x05R\rtotalSessions\x12'\n" +
	"\x0factive_sessions\x18\x02 \x01(\x05R\x0eactiveSessions\x124\n" +
	"\x16total_playtime_seconds\x18\x03 \x01(\x03R\x14totalPlaytimeSeconds\x12G\n" +
	" average_session_duration_seconds\x18\x04 \x01(\x03R\x1daverageSessionDurationSeconds\x12%\n" +
	"\x0eunique_players\x18\x05 \x01(\x05R\runiquePlayers\x12;\n" +
	"\vlast_played\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"lastPlayed\x12P\n" +
	"\vdaily_stats\x18\a \x03(\v2/.dungeongate.games.v1.GameStats.DailyStatsEntryR\n" +
	"dailyStats\x1a=\n" +
	"\x0fDailyStatsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x03R\x05value:\x028\x01\"\xf7\x02\n" +
	"\x10GameSessionStats\x12)\n" +
	"\x10duration_seconds\x18\x01 \x01(\x03R\x0fdurationSeconds\x12+\n" +
	"\x11bytes_transferred\x18\x02 \x01(\x03R\x10bytesTransferred\x12+\n" +
	"\x11commands_executed\x18\x03 \x01(\x05R\x10commandsExecuted\x12)\n" +
	"\x10spectators_count\x18\x04 \x01(\x05R\x0fspectatorsCount\x12m\n" +
	"\x13game_specific_stats\x18\x05 \x03(\v2=.dungeongate.games.v1.GameSessionStats.GameSpecificStatsEntryR\x11gameSpecificStats\x1aD\n" +
	"\x16GameSpecificStatsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xc5\x02\n" +
	"\tGameEvent\x12\x19\n" +
	"\bevent_id\x18\x01 \x01(\tR\aeventId\x12\x1d\n" +
	"\n" +
	"session_id\x18\x02 \x01(\tR\tsessionId\x12\x1d\n" +
	"\n" +
	"event_type\x18\x03 \x01(\tR\teventType\x12\x1d\n" +
	"\n" +
	"event_data\x18\x04 \x01(\fR\teventData\x12I\n" +
	"\bmetadata\x18\x05 \x03(\v2-.dungeongate.games.v1.GameEvent.MetadataEntryR\bmetadata\x128\n" +
	"\ttimestamp\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xc4\x02\n" +
	"\bGameData\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12\x1b\n" +
	"\tdata_type\x18\x02 \x01(\tR\bdataType\x12\x12\n" +
	"\x04data\x18\x03 \x01(\fR\x04data\x12'\n" +
	"\x0fsequence_number\x18\x04 \x01(\x03R\x0esequenceNumber\x128\n" +
	"\ttimestamp\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12H\n" +
	"\bmetadata\x18\x06 \x03(\v2,.dungeongate.games.v1.GameData.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01*m\n" +
	"\x11GameSessionStatus\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\f\n" +
	"\bSTARTING\x10\x01\x12\v\n" +
	"\aRUNNING\x10\x02\x12\n" +
	"\n" +
	"\x06PAUSED\x10\x03\x12\f\n" +
	"\bSTOPPING\x10\x04\x12\v\n" +
	"\aSTOPPED\x10\x05\x12\t\n" +
	"\x05ERROR\x10\x062\xe5\a\n" +
	"\vGameService\x12\\\n" +
	"\tStartGame\x12&.dungeongate.games.v1.StartGameRequest\x1a'.dungeongate.games.v1.StartGameResponse\x12Y\n" +
	"\bStopGame\x12%.dungeongate.games.v1.StopGameRequest\x1a&.dungeongate.games.v1.StopGameResponse\x12k\n" +
	"\x0eGetGameSession\x12+.dungeongate.games.v1.GetGameSessionRequest\x1a,.dungeongate.games.v1.GetGameSessionResponse\x12w\n" +
	"\x12ListActiveSessions\x12/.dungeongate.games.v1.ListActiveSessionsRequest\x1a0.dungeongate.games.v1.ListActiveSessionsResponse\x12^\n" +
	"\x12ListAvailableGames\x12\x16.google.protobuf.Empty\x1a0.dungeongate.games.v1.ListAvailableGamesResponse\x12b\n" +
	"\vGetGameInfo\x12(.dungeongate.games.v1.GetGameInfoRequest\x1a).dungeongate.games.v1.GetGameInfoResponse\x12d\n" +
	"\x10StreamGameEvents\x12-.dungeongate.games.v1.StreamGameEventsRequest\x1a\x1f.dungeongate.games.v1.GameEvent0\x01\x12[\n" +
	"\fAttachToGame\x12).dungeongate.games.v1.AttachToGameRequest\x1a\x1e.dungeongate.games.v1.GameData0\x01\x12h\n" +
	"\rSendGameInput\x12*.dungeongate.games.v1.SendGameInputRequest\x1a+.dungeongate.games.v1.SendGameInputResponse\x12F\n" +
	"\x06Health\x12\x16.google.protobuf.Empty\x1a$.dungeongate.games.v1.HealthResponseB)Z'github.com/dungeongate/pkg/api/games/v1b\x06proto3"

var (
	file_api_proto_games_game_service_v1_proto_rawDescOnce sync.Once
	file_api_proto_games_game_service_v1_proto_rawDescData []byte
)

func file_api_proto_games_game_service_v1_proto_rawDescGZIP() []byte {
	file_api_proto_games_game_service_v1_proto_rawDescOnce.Do(func() {
		file_api_proto_games_game_service_v1_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_proto_games_game_service_v1_proto_rawDesc), len(file_api_proto_games_game_service_v1_proto_rawDesc)))
	})
	return file_api_proto_games_game_service_v1_proto_rawDescData
}

var file_api_proto_games_game_service_v1_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_proto_games_game_service_v1_proto_msgTypes = make([]protoimpl.MessageInfo, 45)
var file_api_proto_games_game_service_v1_proto_goTypes = []any{
	(GameSessionStatus)(0),             // 0: dungeongate.games.v1.GameSessionStatus
	(*StartGameRequest)(nil),           // 1: dungeongate.games.v1.StartGameRequest
	(*StartGameResponse)(nil),          // 2: dungeongate.games.v1.StartGameResponse
	(*StopGameRequest)(nil),            // 3: dungeongate.games.v1.StopGameRequest
	(*StopGameResponse)(nil),           // 4: dungeongate.games.v1.StopGameResponse
	(*GetGameSessionRequest)(nil),      // 5: dungeongate.games.v1.GetGameSessionRequest
	(*GetGameSessionResponse)(nil),     // 6: dungeongate.games.v1.GetGameSessionResponse
	(*ListActiveSessionsRequest)(nil),  // 7: dungeongate.games.v1.ListActiveSessionsRequest
	(*ListActiveSessionsResponse)(nil), // 8: dungeongate.games.v1.ListActiveSessionsResponse
	(*ListAvailableGamesResponse)(nil), // 9: dungeongate.games.v1.ListAvailableGamesResponse
	(*GetGameInfoRequest)(nil),         // 10: dungeongate.games.v1.GetGameInfoRequest
	(*GetGameInfoResponse)(nil),        // 11: dungeongate.games.v1.GetGameInfoResponse
	(*StreamGameEventsRequest)(nil),    // 12: dungeongate.games.v1.StreamGameEventsRequest
	(*AttachToGameRequest)(nil),        // 13: dungeongate.games.v1.AttachToGameRequest
	(*SendGameInputRequest)(nil),       // 14: dungeongate.games.v1.SendGameInputRequest
	(*SendGameInputResponse)(nil),      // 15: dungeongate.games.v1.SendGameInputResponse
	(*HealthResponse)(nil),             // 16: dungeongate.games.v1.HealthResponse
	(*GameSession)(nil),                // 17: dungeongate.games.v1.GameSession
	(*Game)(nil),                       // 18: dungeongate.games.v1.Game
	(*GameBinary)(nil),                 // 19: dungeongate.games.v1.GameBinary
	(*GameFiles)(nil),                  // 20: dungeongate.games.v1.GameFiles
	(*GamePermissions)(nil),            // 21: dungeongate.games.v1.GamePermissions
	(*GameSettings)(nil),               // 22: dungeongate.games.v1.GameSettings
	(*GameSpectating)(nil),             // 23: dungeongate.games.v1.GameSpectating
	(*GameRecording)(nil),              // 24: dungeongate.games.v1.GameRecording
	(*GameResourceLimits)(nil),         // 25: dungeongate.games.v1.GameResourceLimits
	(*GameResourceUsage)(nil),          // 26: dungeongate.games.v1.GameResourceUsage
	(*GameContainer)(nil),              // 27: dungeongate.games.v1.GameContainer
	(*GameVolume)(nil),                 // 28: dungeongate.games.v1.GameVolume
	(*GameSecurityContext)(nil),        // 29: dungeongate.games.v1.GameSecurityContext
	(*GameNetworking)(nil),             // 30: dungeongate.games.v1.GameNetworking
	(*GamePort)(nil),                   // 31: dungeongate.games.v1.GamePort
	(*GameStats)(nil),                  // 32: dungeongate.games.v1.GameStats
	(*GameSessionStats)(nil),           // 33: dungeongate.games.v1.GameSessionStats
	(*GameEvent)(nil),                  // 34: dungeongate.games.v1.GameEvent
	(*GameData)(nil),                   // 35: dungeongate.games.v1.GameData
	nil,                                // 36: dungeongate.games.v1.StartGameRequest.EnvironmentEntry
	nil,                                // 37: dungeongate.games.v1.HealthResponse.DetailsEntry
	nil,                                // 38: dungeongate.games.v1.GameSession.MetadataEntry
	nil,                                // 39: dungeongate.games.v1.Game.EnvironmentEntry
	nil,                                // 40: dungeongate.games.v1.GameSettings.OptionsEntry
	nil,                                // 41: dungeongate.games.v1.GameContainer.EnvironmentEntry
	nil,                                // 42: dungeongate.games.v1.GameStats.DailyStatsEntry
	nil,                                // 43: dungeongate.games.v1.GameSessionStats.GameSpecificStatsEntry
	nil,                                // 44: dungeongate.games.v1.GameEvent.MetadataEntry
	nil,                                // 45: dungeongate.games.v1.GameData.MetadataEntry
	(*timestamppb.Timestamp)(nil),      // 46: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),              // 47: google.protobuf.Empty
}
var file_api_proto_games_game_service_v1_proto_depIdxs = []int32{
	36, // 0: dungeongate.games.v1.StartGameRequest.environment:type_name -> dungeongate.games.v1.StartGameRequest.EnvironmentEntry
	25, // 1: dungeongate.games.v1.StartGameRequest.resource_limits:type_name -> dungeongate.games.v1.GameResourceLimits
	17, // 2: dungeongate.games.v1.StartGameResponse.session:type_name -> dungeongate.games.v1.GameSession
	33, // 3: dungeongate.games.v1.StopGameResponse.final_stats:type_name -> dungeongate.games.v1.GameSessionStats
	17, // 4: dungeongate.games.v1.GetGameSessionResponse.session:type_name -> dungeongate.games.v1.GameSession
	17, // 5: dungeongate.games.v1.ListActiveSessionsResponse.sessions:type_name -> dungeongate.games.v1.GameSession
	18, // 6: dungeongate.games.v1.ListAvailableGamesResponse.games:type_name -> dungeongate.games.v1.Game
	18, // 7: dungeongate.games.v1.GetGameInfoResponse.game:type_name -> dungeongate.games.v1.Game
	32, // 8: dungeongate.games.v1.GetGameInfoResponse.stats:type_name -> dungeongate.games.v1.GameStats
	46, // 9: dungeongate.games.v1.SendGameInputRequest.timestamp:type_name -> google.protobuf.Timestamp
	37, // 10: dungeongate.games.v1.HealthResponse.details:type_name -> dungeongate.games.v1.HealthResponse.DetailsEntry
	46, // 11: dungeongate.games.v1.HealthResponse.timestamp:type_name -> google.protobuf.Timestamp
	0,  // 12: dungeongate.games.v1.GameSession.status:type_name -> dungeongate.games.v1.GameSessionStatus
	46, // 13: dungeongate.games.v1.GameSession.start_time:type_name -> google.protobuf.Timestamp
	46, // 14: dungeongate.games.v1.GameSession.last_activity:type_name -> google.protobuf.Timestamp
	26, // 15: dungeongate.games.v1.GameSession.resource_usage:type_name -> dungeongate.games.v1.GameResourceUsage
	38, // 16: dungeongate.games.v1.GameSession.metadata:type_name -> dungeongate.games.v1.GameSession.MetadataEntry
	19, // 17: dungeongate.games.v1.Game.binary:type_name -> dungeongate.games.v1.GameBinary
	20, // 18: dungeongate.games.v1.Game.files:type_name -> dungeongate.games.v1.GameFiles
	22, // 19: dungeongate.games.v1.Game.settings:type_name -> dungeongate.games.v1.GameSettings
	39, // 20: dungeongate.games.v1.Game.environment:type_name -> dungeongate.games.v1.Game.EnvironmentEntry
	25, // 21: dungeongate.games.v1.Game.resource_limits:type_name -> dungeongate.games.v1.GameResourceLimits
	27, // 22: dungeongate.games.v1.Game.container:type_name -> dungeongate.games.v1.GameContainer
	30, // 23: dungeongate.games.v1.Game.networking:type_name -> dungeongate.games.v1.GameNetworking
	21, // 24: dungeongate.games.v1.GameFiles.permissions:type_name -> dungeongate.games.v1.GamePermissions
	23, // 25: dungeongate.games.v1.GameSettings.spectating:type_name -> dungeongate.games.v1.GameSpectating
	24, // 26: dungeongate.games.v1.GameSettings.recording:type_name -> dungeongate.games.v1.GameRecording
	40, // 27: dungeongate.games.v1.GameSettings.options:type_name -> dungeongate.games.v1.GameSettings.OptionsEntry
	46, // 28: dungeongate.games.v1.GameResourceUsage.timestamp:type_name -> google.protobuf.Timestamp
	28, // 29: dungeongate.games.v1.GameContainer.volumes:type_name -> dungeongate.games.v1.GameVolume
	41, // 30: dungeongate.games.v1.GameContainer.environment:type_name -> dungeongate.games.v1.GameContainer.EnvironmentEntry
	29, // 31: dungeongate.games.v1.GameContainer.security_context:type_name -> dungeongate.games.v1.GameSecurityContext
	31, // 32: dungeongate.games.v1.GameNetworking.ports:type_name -> dungeongate.games.v1.GamePort
	46, // 33: dungeongate.games.v1.GameStats.last_played:type_name -> google.protobuf.Timestamp
	42, // 34: dungeongate.games.v1.GameStats.daily_stats:type_name -> dungeongate.games.v1.GameStats.DailyStatsEntry
	43, // 35: dungeongate.games.v1.GameSessionStats.game_specific_stats:type_name -> dungeongate.games.v1.GameSessionStats.GameSpecificStatsEntry
	44, // 36: dungeongate.games.v1.GameEvent.metadata:type_name -> dungeongate.games.v1.GameEvent.MetadataEntry
	46, // 37: dungeongate.games.v1.GameEvent.timestamp:type_name -> google.protobuf.Timestamp
	46, // 38: dungeongate.games.v1.GameData.timestamp:type_name -> google.protobuf.Timestamp
	45, // 39: dungeongate.games.v1.GameData.metadata:type_name -> dungeongate.games.v1.GameData.MetadataEntry
	1,  // 40: dungeongate.games.v1.GameService.StartGame:input_type -> dungeongate.games.v1.StartGameRequest
	3,  // 41: dungeongate.games.v1.GameService.StopGame:input_type -> dungeongate.games.v1.StopGameRequest
	5,  // 42: dungeongate.games.v1.GameService.GetGameSession:input_type -> dungeongate.games.v1.GetGameSessionRequest
	7,  // 43: dungeongate.games.v1.GameService.ListActiveSessions:input_type -> dungeongate.games.v1.ListActiveSessionsRequest
	47, // 44: dungeongate.games.v1.GameService.ListAvailableGames:input_type -> google.protobuf.Empty
	10, // 45: dungeongate.games.v1.GameService.GetGameInfo:input_type -> dungeongate.games.v1.GetGameInfoRequest
	12, // 46: dungeongate.games.v1.GameService.StreamGameEvents:input_type -> dungeongate.games.v1.StreamGameEventsRequest
	13, // 47: dungeongate.games.v1.GameService.AttachToGame:input_type -> dungeongate.games.v1.AttachToGameRequest
	14, // 48: dungeongate.games.v1.GameService.SendGameInput:input_type -> dungeongate.games.v1.SendGameInputRequest
	47, // 49: dungeongate.games.v1.GameService.Health:input_type -> google.protobuf.Empty
	2,  // 50: dungeongate.games.v1.GameService.StartGame:output_type -> dungeongate.games.v1.StartGameResponse
	4,  // 51: dungeongate.games.v1.GameService.StopGame:output_type -> dungeongate.games.v1.StopGameResponse
	6,  // 52: dungeongate.games.v1.GameService.GetGameSession:output_type -> dungeongate.games.v1.GetGameSessionResponse
	8,  // 53: dungeongate.games.v1.GameService.ListActiveSessions:output_type -> dungeongate.games.v1.ListActiveSessionsResponse
	9,  // 54: dungeongate.games.v1.GameService.ListAvailableGames:output_type -> dungeongate.games.v1.ListAvailableGamesResponse
	11, // 55: dungeongate.games.v1.GameService.GetGameInfo:output_type -> dungeongate.games.v1.GetGameInfoResponse
	34, // 56: dungeongate.games.v1.GameService.StreamGameEvents:output_type -> dungeongate.games.v1.GameEvent
	35, // 57: dungeongate.games.v1.GameService.AttachToGame:output_type -> dungeongate.games.v1.GameData
	15, // 58: dungeongate.games.v1.GameService.SendGameInput:output_type -> dungeongate.games.v1.SendGameInputResponse
	16, // 59: dungeongate.games.v1.GameService.Health:output_type -> dungeongate.games.v1.HealthResponse
	50, // [50:60] is the sub-list for method output_type
	40, // [40:50] is the sub-list for method input_type
	40, // [40:40] is the sub-list for extension type_name
	40, // [40:40] is the sub-list for extension extendee
	0,  // [0:40] is the sub-list for field type_name
}

func init() { file_api_proto_games_game_service_v1_proto_init() }
func file_api_proto_games_game_service_v1_proto_init() {
	if File_api_proto_games_game_service_v1_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_proto_games_game_service_v1_proto_rawDesc), len(file_api_proto_games_game_service_v1_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   45,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_proto_games_game_service_v1_proto_goTypes,
		DependencyIndexes: file_api_proto_games_game_service_v1_proto_depIdxs,
		EnumInfos:         file_api_proto_games_game_service_v1_proto_enumTypes,
		MessageInfos:      file_api_proto_games_game_service_v1_proto_msgTypes,
	}.Build()
	File_api_proto_games_game_service_v1_proto = out.File
	file_api_proto_games_game_service_v1_proto_goTypes = nil
	file_api_proto_games_game_service_v1_proto_depIdxs = nil
}
